# docker-compose.yml

services:
  nginx:
    image: nginx:stable-alpine
    container_name: nginx-reverse-proxy
    restart: unless-stopped
    # Publish a single host IP:port -> container port (edit HOST_IP / HOST_PORT in .env or below)
    ports:
      - "5678:5678"
    volumes:
      # put your nginx config in ./nginx/conf.d/default.conf (example provided below)
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      # TLS bind-mounts to host cert/key (read-only)
      - "${TLS_KEY_FILENAME}:/etc/ssl/private/server.key:ro"
      - "${TLS_CRT_FILENAME}:/etc/ssl/certs/server.crt:ro"
    depends_on:
      - n8n
    networks:
      - n8n

  n8n:
    image: n8nio/n8n:latest
    container_name: n8n
    restart: unless-stopped
    environment:
      # Database (Postgres)
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=${N8N_DB_NAME}
      - DB_POSTGRESDB_USER=${N8N_DB_USER}
      - DB_POSTGRESDB_PASSWORD=${N8N_DB_PASSWORD}

      # Basic UI protection (recommended)
      - N8N_BASIC_AUTH_ACTIVE=${N8N_BASIC_AUTH_ACTIVE:-true}
      - N8N_BASIC_AUTH_USER=${N8N_BASIC_AUTH_USER:-admin}
      - N8N_BASIC_AUTH_PASSWORD=${N8N_BASIC_AUTH_PASSWORD}

      # Webhook and proxy settings (very important when behind nginx)
      - WEBHOOK_URL=${WEBHOOK_URL}   # set to your public URL
      - N8N_PROXY_HOPS=1
      - N8N_ENCRYPTION_KEY=${N8N_ENCRYPTION_KEY}

      # Optional: override host/port if needed internally
      - N8N_HOST=${N8N_HOST} 
      - N8N_PORT=5678
    volumes:
      - n8n_data:/home/node/.n8n
    networks:
      - n8n

  postgres:
    image: jeromemassey76/postgres:17-wal
    container_name: n8n_postgres
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-n8n}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB:-n8n}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - n8n


volumes:
  n8n_data:
  postgres_data:

networks:
  n8n:
    driver: bridge
