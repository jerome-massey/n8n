# Copy this file to .env and fill in values as needed
# Windows note: Update the TLS cert/key host paths in docker-compose if your files are not under /etc/ssl/private on the host.

# --- TLS for Nginx reverse proxy ---
# These are filenames expected under /etc/ssl/private on the HOST side of the bind mount.
# Example: if your files are C:\\certs\\server.key and C:\\certs\\server.crt, adjust the nginx volumes in docker-compose.yml accordingly.
TLS_KEY_FILENAME=server.key
TLS_CRT_FILENAME=server.crt

# --- n8n database settings (Postgres) ---
# These feed both the n8n service and the postgres container (defaults provided below if unset).
N8N_DB_NAME=n8n
N8N_DB_USER=n8n
# Choose a strong password
N8N_DB_PASSWORD=change_me_strong_password

# --- n8n application security ---
# Basic auth gate in front of n8n UI
N8N_BASIC_AUTH_ACTIVE=true
N8N_BASIC_AUTH_USER=admin
N8N_BASIC_AUTH_PASSWORD=change_me_admin_password

# Public URL used by n8n for webhooks behind the proxy (include protocol)
# Example: https://your-domain.example:5678
WEBHOOK_URL=

# 32+ char encryption key used by n8n to encrypt credentials
# Generate one (PowerShell):
#   $chars = (48..57)+(65..90)+(97..122); -join (1..32 | ForEach-Object { [char]($chars | Get-Random) })
N8N_ENCRYPTION_KEY=

# Optional: advertise a host for n8n (rarely needed when behind nginx)
N8N_HOST=

# --- Postgres container (used by n8n) ---
# These have defaults but can be overridden
POSTGRES_USER=n8n
POSTGRES_PASSWORD=change_me_db_root_password
POSTGRES_DB=n8n

